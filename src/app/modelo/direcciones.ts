// Generated by https://quicktype.io

export interface Direcciones {
    routes: Route[];
    waypoints: Waypoint[];
    code: string;
    uuid: string;
}

export interface Route {
    geometry: Geometry;
    legs: Leg[];
    weight_name: string;
    weight: number;
    duration: number;
    distance: number;
}

export interface Geometry {
    coordinates: Array<number[]>;
    type: GeometryType;
}

export enum GeometryType {
    LineString = "LineString",
}

export interface Leg {
    steps: Step[];
    summary: string;
    weight: number;
    duration: number;
    distance: number;
}

export interface Step {
    geometry: Geometry;
    maneuver: Maneuver;
    mode: Mode;
    driving_side: DrivingSide;
    name: string;
    intersections: Intersection[];
    weight: number;
    duration: number;
    distance: number;
}

export enum DrivingSide {
    Left = "left",
    Right = "right",
    SlightLeft = "slight left",
    SlightRight = "slight right",
    Straight = "straight",
}

export interface Intersection {
    out?: number;
    entry: boolean[];
    bearings: number[];
    location: number[];
    in?: number;
    classes?: string[];
}

export interface Maneuver {
    bearing_after: number;
    bearing_before: number;
    location: number[];
    modifier: DrivingSide;
    type: ManeuverType;
    instruction: string;
}

export enum ManeuverType {
    Arrive = "arrive",
    Continue = "continue",
    Depart = "depart",
    EndOfRoad = "end of road",
    NewName = "new name",
    Notification = "notification",
    Turn = "turn",
}

export enum Mode {
    Cycling = "cycling",
    PushingBike = "pushing bike",
}

export interface Waypoint {
    distance: number;
    name: string;
    location: number[];
}
